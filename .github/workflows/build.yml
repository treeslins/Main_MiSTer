name: build-mister

on:
  push:
    branches: [ master, cjk-osd ]   # 只要 master 就改成 [ master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1) amd64 用 archive/security，armhf 用 ports（避免 404）
      - name: Configure APT sources for multiarch
        run: |
          set -e
          sudo dpkg --add-architecture armhf
          sudo bash -c 'cat > /etc/apt/sources.list << "EOF"
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main universe multiverse restricted
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-updates main universe multiverse restricted
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-backports main universe multiverse restricted
          deb [arch=amd64] http://security.ubuntu.com/ubuntu jammy-security main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-updates main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-backports main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-security main universe multiverse restricted
          EOF'
          sudo apt-get update

      # 2) 交叉编译器 + FreeType（armhf）
      - name: Install toolchains and deps
        run: |
          set -e
          sudo apt-get install -y \
            make pkg-config zip \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            libfreetype6-dev:armhf zlib1g-dev:armhf libpng-dev:armhf libbz2-dev:armhf

      # 3) 兼容别名：如 Makefile 写死 arm-none- 前缀
      - name: Add arm-none aliases (compat)
        run: |
          set -e
          for x in gcc g++ ar as ld strip objcopy objdump ranlib nm; do
            src="$(command -v arm-linux-gnueabihf-$x)"
            [ -n "$src" ] || { echo "missing arm-linux-gnueabihf-$x"; exit 1; }
            sudo ln -sf "$src" /usr/bin/arm-none-linux-gnueabihf-$x
          done

      # 4) 编译：补全所有需要的头文件搜索路径
      - name: Build
        env:
          PKG_CONFIG_LIBDIR: /usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig
        run: |
          set -e
          make clean || true

          # freetype flags
          FT_CFLAGS="$(pkg-config --cflags f_
