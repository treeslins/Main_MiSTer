name: build-mister

on:
  push:
    branches: [ master, cjk-osd ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure APT sources for multiarch
        run: |
          set -e
          sudo dpkg --add-architecture armhf
          sudo bash -c 'cat > /etc/apt/sources.list << "EOF"
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main universe multiverse restricted
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-updates main universe multiverse restricted
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-backports main universe multiverse restricted
          deb [arch=amd64] http://security.ubuntu.com/ubuntu jammy-security main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-updates main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-backports main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-security main universe multiverse restricted
          EOF'
          sudo apt-get update

      - name: Install toolchains and deps
        run: |
          set -e
          sudo apt-get install -y \
            make pkg-config zip \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            libfreetype6-dev:armhf zlib1g-dev:armhf libpng-dev:armhf libbz2-dev:armhf

      - name: Add arm-none aliases (compat)
        run: |
          set -e
          for x in gcc g++ ar as ld strip objcopy objdump ranlib nm; do
            src="$(command -v arm-linux-gnueabihf-$x)"
            [ -n "$src" ] || { echo "missing arm-linux-gnueabihf-$x"; exit 1; }
            sudo ln -sf "$src" /usr/bin/arm-none-linux-gnueabihf-$x
          done

      - name: Build
        env:
          PKG_CONFIG_LIBDIR: /usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig
        run: |
          set -e
          make clean || true
          FT_CFLAGS="$(pkg-config --cflags freetype2)"
          FT_LIBS="$(pkg-config --libs freetype2)"
          CHDR_INC="-Ilib/libchdr/include -Ilib/libchdr"
          # 覆盖不同仓库布局的 LZMA 头文件目录（取其一即可，不存在也无碍）
          LZMA_INC="-Ilib/lzma -Ilib/lzma/C -Ilib/lzma/SDK/C"
          echo "FT_CFLAGS=$FT_CFLAGS"
          echo "FT_LIBS=$FT_LIBS"
          make -j"$(nproc)" \
            CROSS_COMPILE=arm-linux-gnueabihf- \
            CFLAGS="$CFLAGS $FT_CFLAGS -D_7ZIP_ST $CHDR_INC $LZMA_INC" \
            CXXFLAGS="$CXXFLAGS $FT_CFLAGS -D_7ZIP_ST $CHDR_INC $LZMA_INC" \
            CPPFLAGS="$CPPFLAGS $FT_CFLAGS -D_7ZIP_ST $CHDR_INC $LZMA_INC" \
            LIBS="$LIBS $FT_LIBS" \
            LDLIBS="$LDLIBS $FT_LIBS"

      - name: Show result
        run: |
          file ./MiSTer || true
          ls -lh ./MiSTer || (echo "Build did not produce MiSTer binary" && exit 1)

      - name: Zip artifact
        run: zip -9 MiSTer-${{ github.ref_name }}-${{ github.sha }}.zip MiSTer

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MiSTer-${{ github.ref_name }}
          path: |
            MiSTer
            MiSTer-*.zip
          retention-days: 14
